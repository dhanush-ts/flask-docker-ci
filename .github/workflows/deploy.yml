# name: Deploy Flask App to EC2

# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Add SSH key
#         run: |
#           echo "${{ secrets.EC2_KEY }}" > key.pem
#           chmod 400 key.pem

#       - name: Copy files to EC2
#         run: |
#           scp -i key.pem -o StrictHostKeyChecking=no -r . ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ec2-user/app

#       - name: Build and run Docker on EC2
#         run: |
#           ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
#             cd /home/ec2-user/app
#             docker stop flaskapp || true
#             docker rm flaskapp || true
#             docker build -t flaskapp .
#             docker run -d --name flaskapp -p 80:5000 flaskapp
#           EOF


name: Deploy to EC2 via SCP

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create deployment folder
      run: |
        mkdir deploy
        cp app.py Dockerfile deploy/

    - name: Save EC2 SSH key
      run: |
        printf "%s" "${{ secrets.EC2_KEY }}" > key.pem
        chmod 600 key.pem

    - name: Copy files to EC2
      run: |
        scp -i key.pem -o StrictHostKeyChecking=no -r deploy/* ec2-user@18.234.218.71:/home/ec2-user/app/

    - name: Restart Docker container on EC2
      run: |
        ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@18.234.218.71 "
          docker stop flaskapp || true &&
          docker rm flaskapp || true &&
          cd /home/ec2-user/app &&
          docker build -t flaskapp . &&
          docker run -d --name flaskapp -p 80:5000 flaskapp
        "